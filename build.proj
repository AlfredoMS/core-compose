<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="ZipFileExtractToDirectory" AssemblyFile="$(BuildToolsTaskDir)Microsoft.DotNet.Build.Tasks.dll" />

  <Import Project="dir.props" />
  <Import Project="config.props" />

  <!--
   1. Build local repo tools
   2. Update core-setup project.jsons
   3. Update core-setup .cs version files
   4. build core-setup
   5. Get shared framework version
   5. Create signal file layout
   6. Update cli project.jsons
   7. Update cli .cs version files
   8. build cli
  -->
  <PropertyGroup>
    <!-- Note: escape msbuild characters with ascii escape codes.  < == %3C, > == %3E-->
    <PackageNameRegex Condition="'$(PackageNameRegex)' == ''">(?%3Cname%3E.*)\.(?%3Cversion%3E\d+\.\d+\.\d+)(-(?%3Cprerelease%3E.*)?)?</PackageNameRegex>
  </PropertyGroup>

  <PropertyGroup>
    <CoreClrPkgs>$(CoreClrRepo)bin\Product\Windows_NT.x64.Release\.nuget\pkg\</CoreClrPkgs>
    <CoreSetupPkgs>$(CoreSetupRepo)artifacts\win10-x64\corehost\</CoreSetupPkgs>
    <CliIntermediatePath>$(CliRepo)artifacts\win10-x64\intermediate\</CliIntermediatePath>
    <CliSignalFilesRootPath>$(CliIntermediatePath)coreSetupDownload\</CliSignalFilesRootPath>
    <CliSharedFrameworkRootPath>$(CliIntermediatePath)sharedFrameworkPublish</CliSharedFrameworkRootPath>
    <CoreSetupInstallersSourcePath>$(CoreSetupRepo)artifacts\win10-x64\packages\</CoreSetupInstallersSourcePath>
    <CliInstallersDestinationPath>$(CliRepo)artifacts\win10-x64\packages\</CliInstallersDestinationPath>
    <CoreSetupDotNetWinZip>$(CoreSetupInstallersSourcePath)</CoreSetupDotNetWinZip>
  </PropertyGroup>

  <Target Name="Build" 
          DependsOnTargets="BuildCoreSetup;BuildCli" />

  <Target Name="BuildCli"
          DependsOnTargets="BuildRepoTools;
                            UpdateCliDependencyVersions;
                            UpdateNuGetConfig;
                            LayoutCoreSetupInstallers" >
    <Exec Command="powershell.exe Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope Process" />
    <Exec Command="$(CliRepo)build.cmd"
          IgnoreStandardErrorWarningFormat="true"
          WorkingDirectory="$(CliRepo)" />
          
  </Target>
  <Target Name="BuildCoreSetup"
          DependsOnTargets="InstallSharedFramework100;
                            BuildRepoTools;
                            UpdateCoreSetupDependencyVersions;
                            UpdateNuGetConfig">
    <Exec Command="powershell.exe Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope Process" />
    <Exec Command="$(CoreSetupRepo)build.cmd" 
          WorkingDirectory="$(CoreSetupRepo)" />
  </Target>

  <Target Name="InstallSharedFramework100"
          Condition="!Exists('$(MSBuildThisFileDirectory)Tools\dotnetcli\shared\Microsoft.NETCore.App\1.0.0\dotnet.exe')">
    <Message Importance="High" Text="Installing shared framework 1.0.0" />
    <Exec Command="powershell.exe $(CliRepo)\scripts\obtain\dotnet-install.ps1 -Version 1.0.0 -Architecture x64 -Channel preview -SharedRuntime -InstallDir $(MSBuildThisFileDirectory)\Tools\dotnetcli" 
          WorkingDirectory="$(MSBuildThisFileDirectory)" />
  </Target>

  <Target Name="LayoutCoreSetupInstallers"
          DependsOnTargets="WriteInstallerSignalFiles;
                            UnzipDotnetWinInstaller;
                            CopyCoreSetupInstallers" />
  <Target Name="CopyCoreSetupInstallers">
    <ItemGroup>
      <InstallerFiles Include="$(CoreSetupInstallersSourcePath)\*" />
    </ItemGroup>
    <Copy SourceFiles="@(InstallerFiles)"
          DestinationFolder="$(CliInstallersDestinationPath)"
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="UnzipDotnetWinInstaller">
    <MakeDir Directories="$(CliSharedFrameworkRootPath)" />
    <ZipFileExtractToDirectory SourceArchive="$(CoreSetupInstallersSourcePath)dotnet-win-x64.$(SharedFrameworkVersion).zip" 
                               DestinationDirectory="$(CliSharedFrameworkRootPath)"
                               OverwriteDestination="true" />
  </Target>

  <Target Name="GetSharedFrameworkVersion">
    <ItemGroup>
      <SharedFrameworkFiles Include="$(CoreSetupInstallersSourcePath)dotnet-sharedframework-*.msi" />
    </ItemGroup>
    <PropertyGroup>
      <SharedFrameworkFile Condition="'$(SharedFrameworkFile)' == ''">%(SharedFrameworkFiles.Identity)</SharedFrameworkFile>
      <SharedFrameworkVersion>$([System.Text.RegularExpressions.Regex]::Match($(SharedFrameworkFile), (\d+\.\d+\.\d+-[^\.]+)))</SharedFrameworkVersion>     
    </PropertyGroup>
    <Message Text="Shared Framework Version: $(SharedFrameworkVersion)" Importance="High" />
  </Target>

  <Target Name="GatherInstallerSignalFiles"
          DependsOnTargets="GetSharedFrameworkVersion">
    <ItemGroup>
      <InstallerSignalFile Include="$(CliSignalFilesRootPath)$(SharedFrameworkVersion)\combinedSharedHostAndFrameworkArchive" />
      <InstallerSignalFile Include="$(CliSignalFilesRootPath)$(SharedFrameworkVersion)\sharedFrameworkInstaller" />
      <InstallerSignalFile Include="$(CliSignalFilesRootPath)$(SharedFrameworkVersion)\sharedHostInstaller" />
      <InstallerSignalFile Include="$(CliSignalFilesRootPath)$(SharedFrameworkVersion)\hostFxrInstaller" />
    </ItemGroup>
  </Target>
  <Target Name="WriteInstallerSignalFiles"
          DependsOnTargets="GatherInstallerSignalFiles"
          Inputs="%(InstallerSignalFile.Identity)"
          Outputs="fake">
    <MakeDir Directories="$(CliSignalFilesRootPath)$(SharedFrameworkVersion)\" />
    <Message Text="Writing signal file: %(InstallerSignalFile.Identity)" Importance="High" />
    <WriteLinesToFile File="%(InstallerSignalFile.Identity)"
                      Lines="Empty signal file"
                      Overwrite="true" />
  </Target>

  <Target Name="BuildRepoTools"
          DependsOnTargets="BuildUpdateNuGetConfigProject" />

  <Target Name="UpdateCoreSetupDependencyVersions">
    <Exec Command="$(ToolsDir)\dotnetcli\dotnet.exe restore $(MSBuildThisFileDirectory)packages" 
          WorkingDirectory="$(MSBuildThisFileDirectory)src\UpdateRepo\src\UpdateRepo" />
    <Exec Command="$(ToolsDir)\dotnetcli\dotnet.exe run $(CoreSetupRepo) $(CoreClrPkgs) " 
          WorkingDirectory="$(MSBuildThisFileDirectory)src\UpdateRepo\src\UpdateRepo" />
  </Target>
  <Target Name="UpdateCliDependencyVersions">
    <Exec Command="$(ToolsDir)\dotnetcli\dotnet.exe restore $(MSBuildThisFileDirectory)packages" 
          WorkingDirectory="$(MSBuildThisFileDirectory)src\UpdateRepo\src\UpdateRepo" />
    <Exec Command="$(ToolsDir)\dotnetcli\dotnet.exe run $(CliRepo) $(CoreClrPkgs) $(CoreSetupPkgs)" 
          WorkingDirectory="$(MSBuildThisFileDirectory)src\UpdateRepo\src\UpdateRepo" />
  </Target>

  <Target Name="UpdateNuGetConfig">
    <Exec Command="$(UpdateNuGetConfigFilename) $(CoreSetupRepo)NuGet.config $(CoreClrPkgs)" />
    <Exec Command="$(UpdateNuGetConfigFilename) $(CliRepo)NuGet.config $(CoreClrPkgs) $(CoreSetupPkgs)" />
  </Target>

  <Target Name="BuildUpdateNuGetConfigProject">
    <ItemGroup>
      <UpdateNuGetConfigProject Include="src\UpdateNuGetConfig\UpdateNuGetConfig.csproj" />
    </ItemGroup>
    <MSBuild Projects="@(UpdateNuGetConfigProject)">
      <Output TaskParameter="TargetOutputs"
              ItemName="UpdateNuGetConfigTargetOutputs" />
    </MSBuild>
    <PropertyGroup>
      <UpdateNuGetConfigFilename Condition="'$(UpdateNuGetConfigFilename)' == ''">%(UpdateNuGetConfigTargetOutputs.Identity)</UpdateNuGetConfigFilename>
    </PropertyGroup>
  </Target>
</Project>
